import numpy as np

def carte_to_frac(str_file):
    with open(str_file, 'r') as data:
        fl = data.readlines()

        scale_factor = float(fl[1])
        lattice_matrix = scale_factor*np.array([list(map(float, i.split())) for i in fl[2:5]]).T
        carte_coord_matrix = np.array([list(map(float, j.split())) for j in fl[8:]]).T
        fractional_coord = np.dot(np.linalg.inv(lattice_matrix), carte_coord_matrix).T

    with open('poscar_frac.vasp', 'w') as output:
        output.write('generated by sampad' +'\n')
        for k in fl[1:7]:
            output.write(k)

        output.write('Direct'+'\n')
        for l in fractional_coord:
            output.write('\t'+"{:.16f}".format(l[0])+'\t'+"{:.16f}".format(l[1])+'\t'+"{:.16f}".format(l[2])+'\n')

    return fractional_coord


structure_file = input('Enter the POSCAR format file with cartesian coordinates\n')
carte_to_frac(structure_file)
